{"version":3,"sources":["Camera.js","ListName.js","App.js","index.js"],"names":["Camera","this","props","addItem","cameraView","itemNumber","onClick","React","Component","ListName","listNameView","type","placeholder","App","state","visibility","listVisibility","cameraVisibility","publishVisibility","bind","setState","className","ReactDOM","render","document","getElementById"],"mappings":"qOAkCeA,E,iLAhBF,IAAD,EACwBC,KAAKC,MAD7B,EACGC,QADH,EACWC,WACf,OACI,6BACI,4BAAKH,KAAKC,MAAMG,WAAhB,kBACA,sCACA,oDACA,0CACA,4BAAQC,QAASL,KAAKC,MAAMC,SAA5B,UACA,4BAAQG,QAASL,KAAKC,MAAME,YAA5B,e,GAzBKG,IAAMC,WCwBZC,E,iLAhBWR,KAAKC,MAApBQ,aAEL,OACI,6BACE,gDACA,2BAAOC,KAAK,OAAOC,YAAY,kBAC/B,4BAAQN,QAASL,KAAKC,MAAMQ,cAA5B,qB,GAdWH,IAAMC,WC8FdK,GA5FSN,IAAMC,U,YAyB5B,WAAYN,GAAO,IAAD,8BAChB,4CAAMA,KACDY,MAAM,CACTC,YAAW,EACXC,gBAAe,EACfC,kBAAiB,EACjBZ,WAAW,EACXa,mBAAkB,GAEpB,EAAKR,aAAa,EAAKA,aAAaS,KAAlB,gBAClB,EAAKf,WAAW,EAAKA,WAAWe,KAAhB,gBAChB,EAAKhB,QAAU,EAAKA,QAAQgB,KAAb,gBAXC,E,4EAeZlB,KAAKmB,SAAS,CACZJ,gBAAe,M,mCAIjBf,KAAKmB,SAAS,CACVH,kBAAiB,M,gCAKjBhB,KAAKa,MAAMT,WAAW,IACtBJ,KAAKmB,SAAS,CACVf,WAAWJ,KAAKa,MAAMT,WAAa,M,+BAMxC,IAAD,EACkEJ,KAAKa,MAAtEE,EADD,EACCA,eAAgBC,EADjB,EACiBA,iBAAkBZ,EADnC,EACmCA,WAAYa,EAD/C,EAC+CA,kBACrD,OAAoB,IAAjBF,EAEC,yBAAKK,UAAU,aACb,wCACA,kBAAC,EAAD,CAAUL,eAAgBA,EAAgBN,aAAcT,KAAKS,eAC7D,4CAGsB,IAAnBO,EAEL,yBAAKI,UAAU,aACb,kBAAC,EAAD,CAAQJ,iBAAkBA,EAAkBb,WAAYH,KAAKG,WAAYC,WAAYA,EAAYF,QAASF,KAAKE,UAC/G,4CAIsB,IAApBe,EAEJ,6BACE,gDACA,+CACA,kDACA,kDACA,gDAPD,M,GArDSX,IAAMC,YCtBxBc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.15339f3d.chunk.js","sourcesContent":["import React from 'react';\n\nclass Camera extends React.Component{\n    // constructor(props) {\n    //     super(props);\n    //     this.state ={\n    //         itemNumber:1,\n    //     };\n    //     this.addItem = this.addItem.bind(this);\n    // }\n    // addItem(){\n    //     if (this.state.itemNumber<10) {\n    //         this.setState({\n    //             itemNumber:this.state.itemNumber + 1\n    //         })\n    //     }\n    // }\n\n    render(){\n        const {addItem,cameraView}= this.props;\n        return(\n            <div>        \n                <h1>{this.props.itemNumber}. Name of item</h1>\n                <h1>Camera</h1>\n                <h1>[Icon]Take a picture</h1>\n                <button>Retake</button>\n                <button onClick={this.props.addItem}>Accept</button>\n                <button onClick={this.props.cameraView}>Accept</button>\n            </div>\n        )\n      }\n}\n\n\nexport default Camera;\n","import React from 'react';\n\nclass ListName extends React.Component{\n    // constructor(props){\n    //     super(props);\n    //     this.state={\n    //         visibility:true,\n    //     }\n    //   }\n  render(){\n    const {listNameView}= this.props;\n    // if (listNameVisibility===true){\n      return(\n          <div>\n            <h1>Name of the list</h1>\n            <input type=\"text\" placeholder=\"Name of class\"/>\n            <button onClick={this.props.listNameView}>Add new list</button>\n          </div>\n      )\n    // }else{\n\n    // }\n  }\n}\n\n\nexport default ListName;\n","import React from 'react';\nimport Camera from './Camera';\nimport ListName from './ListName';\n\nclass ItemNames extends React.Component{\n  constructor(props){\n    super(props);\n    this.state= {\n      itemName:\"Get name from input value\",\n      // inputItemName: document.querySelector(\"div[item-name]\").value,\n    }\n    // this.addItemName=this.addItemName.bind(this);\n  }\n  // addItemName(){\n    // this.setState({\n      // itemName:this.state.inputItemName,\n    // })\n  // }\n  render(){\n    return(\n      <div item-name>\n        <input type=\"text\" placeholder=\"name of the item\" />\n        <button>Add name</button>\n        <p>{this.itemName}</p>\n      </div>\n    )\n  }\n}\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      visibility:true,\n      listVisibility:true,\n      cameraVisibility:true,\n      itemNumber:1,\n      publishVisibility:true,\n    }\n    this.listNameView=this.listNameView.bind(this);\n    this.cameraView=this.cameraView.bind(this);\n    this.addItem = this.addItem.bind(this);\n\n  }\n  listNameView(){\n        this.setState({\n          listVisibility:false,\n        });\n    }\n  cameraView(){\n        this.setState({\n            cameraVisibility:false,\n        })\n  }\n\n  addItem(){\n        if (this.state.itemNumber<10) {\n            this.setState({\n                itemNumber:this.state.itemNumber + 1\n            })\n        }\n  }\n\n\n  render(){\n    const {listVisibility, cameraVisibility, itemNumber, publishVisibility}=this.state;\n    if(listVisibility===true){\n      return(\n        <div className=\"container\">\n          <h1>New list</h1>\n          <ListName listVisibility={listVisibility} listNameView={this.listNameView}/>\n          <p>Step 1 of 3</p>\n        </div>\n      )\n    }else if(cameraVisibility===true){\n      return(\n        <div className=\"container\"> \n          <Camera cameraVisibility={cameraVisibility} cameraView={this.cameraView} itemNumber={itemNumber} addItem={this.addItem}/>\n          <p>Step 2 of 3</p>\n        </div>\n      )\n    }\n    else if(publishVisibility===true){\n      return(\n        <div>\n          <p>Uploading picture</p>\n          <p>Upload completed</p>\n          <button>Add more items</button>\n          <button>Publish class.</button>\n          <p>Step 3 of 3</p>\n        </div>\n      )\n    }\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}